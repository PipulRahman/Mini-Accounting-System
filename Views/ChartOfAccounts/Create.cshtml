@model MiniAccountingSystem.Models.AccountViewModel

@{
    ViewData["Title"] = "Create Account";
}

<h1>Create Account</h1>

<hr />
<div class="row">
    <div class="col-md-6">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="mb-3">
                <label asp-for="AccountName" class="control-label"></label>
                <input asp-for="AccountName" class="form-control" />
                <span asp-validation-for="AccountName" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="AccountCode" class="control-label"></label>
                <input asp-for="AccountCode" class="form-control" />
                <span asp-validation-for="AccountCode" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="ParentAccountId" class="control-label"></label>
                <select asp-for="ParentAccountId" class="form-control" asp-items="@Model.AvailableParentAccounts">
                    <option value="">-- Select Parent Account --</option>
                </select>
                <span asp-validation-for="ParentAccountId" class="text-danger"></span>
            </div>
            <div class="mb-3 form-check">
                <input class="form-check-input" asp-for="IsActive" />
                <label class="form-check-label" asp-for="IsActive"></label>
            </div>
            <div class="mb-3">
                <input type="submit" value="Create" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-secondary">Back to List</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}